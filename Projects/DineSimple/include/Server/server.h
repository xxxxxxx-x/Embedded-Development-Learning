/****************************************************************************************************************************************************************
 * @file         : /DineSimple/include/Server/server.h
 * @brief        : 处理触摸事件和事件绑定
 * @author       : a_23456@foxmail.com
 * @date         : 2024-08-16 16:24:27
 * @version      : 1.1
 * @note         : 定义了触摸事件处理和绑定函数
 * @Copyright    : (c)   2024-2025   a_23456@foxmail.com   All Right Reserved
 *****************************************************************************************************************************************************************/

#ifndef SERVER_H
#define SERVER_H

#include "../UI/ui.h"

/* 触摸事件回调函数类型 */
typedef void (*TouchCallback)(void *);

/* 触摸区域结构体 */
typedef struct {
  int start_x;            // 触摸区域起始 X 坐标
  int end_x;              // 触摸区域结束 X 坐标
  int start_y;            // 触摸区域起始 Y 坐标
  int end_y;              // 触摸区域结束 Y 坐标
  TouchCallback callback; // 触摸事件回调函数
  void *param;            // 传递给回调函数的参数
} TouchRegion;

#define MAX_TOUCH_REGIONS 10

/* 全局触摸区域数组 */
extern TouchRegion touchRegions[MAX_TOUCH_REGIONS];
extern int touchRegionCount;

/****************************************************************************************************************************************************************
 * @name: bind_touch_event
 * @brief: 绑定触摸事件
 * @param {int} start_x - 触摸区域起始 X 坐标
 * @param {int} end_x - 触摸区域结束 X 坐标
 * @param {int} start_y - 触摸区域起始 Y 坐标
 * @param {int} end_y - 触摸区域结束 Y 坐标
 * @param {TouchCallback} callback - 触摸事件回调函数
 * @param {void*} param - 传递给回调函数的参数
 * @return: void
 * @note: 该函数负责绑定触摸事件，使得程序可以响应用户的触摸操作
 *****************************************************************************************************************************************************************/
void bind_touch_event(int start_x, int end_x, int start_y, int end_y,
                      TouchCallback callback, void *param);

/****************************************************************************************************************************************************************
 * @name: destroy_event
 * @brief: 销毁事件
 * @return: void
 * @note: 该函数负责销毁事件，释放相关资源
 *****************************************************************************************************************************************************************/
void destroy_event(void);

/****************************************************************************************************************************************************************
 * @name: handle_touch_event
 * @brief: 处理触摸事件
 * @param {int} x - 触摸点的 X 坐标
 * @param {int} y - 触摸点的 Y 坐标
 * @return: void
 * @note: 该函数负责处理触摸事件，根据坐标确定点击的区域，并做出相应处理
 *****************************************************************************************************************************************************************/
void handle_touch_event(int x, int y);

#endif // SERVER_H
