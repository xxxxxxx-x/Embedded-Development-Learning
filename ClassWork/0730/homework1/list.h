/****************************************************************************************************************************************************************
 * @file         : /ClassWork/0730/homework1/list.h
 * @brief        : 双链表的头文件，包含双链表的结构体定义和函数接口声明
 * @author       : a_23456@foxmail.com
 * @date         : 2024-08-01 14:30:00
 * @version      : 1.0
 * @note         :
 * @Copyright    : (c)   2024-2025   a_23456@foxmail.com   All Right Reserved
 *****************************************************************************************************************************************************************/

#ifndef LIST_H
#define LIST_H

#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>

// 定义双链表的节点结构体
typedef struct DListNode {
  int data;               // 节点数据
  struct DListNode *prev; // 指向前一个节点的指针
  struct DListNode *next; // 指向下一个节点的指针
} DListNode;

/****************************************************************************************************************************************************************
 * @name: create_node
 * @brief: 创建一个新的双链表节点
 * @param {int} value 节点数据
 * @return {DListNode*} 新创建的节点指针
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
DListNode *create_node(int value);

/****************************************************************************************************************************************************************
 * @name: insert_head
 * @brief: 在双链表头部插入一个新节点
 * @param {DListNode**} head 双链表头指针的指针
 * @param {int} value 新节点的数据
 * @return {bool} 插入成功返回 true，否则返回 false
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
bool insert_head(DListNode **head, int value);

/****************************************************************************************************************************************************************
 * @name: insert_tail
 * @brief: 在双链表尾部插入一个新节点
 * @param {DListNode**} head 双链表头指针的指针
 * @param {int} value 新节点的数据
 * @return {bool} 插入成功返回 true，否则返回 false
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
bool insert_tail(DListNode **head, int value);

/****************************************************************************************************************************************************************
 * @name: insert_at
 * @brief: 在双链表的指定位置插入一个新节点
 * @param {DListNode**} head 双链表头指针的指针
 * @param {int} value 新节点的数据
 * @param {int} position 插入位置
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void insert_at(DListNode **head, int value, int position);

/****************************************************************************************************************************************************************
 * @name: delete_head
 * @brief: 删除双链表的头节点
 * @param {DListNode**} head 双链表头指针的指针
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void delete_head(DListNode **head);

/****************************************************************************************************************************************************************
 * @name: delete_tail
 * @brief: 删除双链表的尾节点
 * @param {DListNode**} head 双链表头指针的指针
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void delete_tail(DListNode **head);

/****************************************************************************************************************************************************************
 * @name: delete_at
 * @brief: 删除双链表指定位置的节点
 * @param {DListNode**} head 双链表头指针的指针
 * @param {int} position 删除的位置
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void delete_at(DListNode **head, int position);

/****************************************************************************************************************************************************************
 * @name: update_value
 * @brief: 更新双链表指定位置的节点数据
 * @param {DListNode*} head 双链表头指针
 * @param {int} position 更新的位置
 * @param {int} new_value 新数据
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void update_value(DListNode *head, int position, int new_value);

/****************************************************************************************************************************************************************
 * @name: search_value
 * @brief: 搜索双链表中第一个匹配指定数据的节点
 * @param {DListNode*} head 双链表头指针
 * @param {int} value 搜索的数据
 * @return {DListNode*} 找到的节点指针，未找到返回 NULL
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
DListNode *search_value(DListNode *head, int value);

/****************************************************************************************************************************************************************
 * @name: display_list
 * @brief: 打印双链表中的所有节点数据
 * @param {DListNode*} head 双链表头指针
 * @return {void}
 * @date: 2024-08-01 14:30:00
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
void display_list(DListNode *head);

#endif // LIST_H
