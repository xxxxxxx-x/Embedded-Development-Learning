/****************************************************************************************************************************************************************
 * @file         : /ClassWork/0726/homework2/student.h
 * @brief        :
 *                 学生信息管理头文件，提供添加、显示、查找、修改和删除学生信息的功能
 * @date         : 2024-07-27 10:34:38
 * @version      : 1.0
 * @author       : a_23456@foxmail.com
 * @note         : 包含学生信息结构体定义和相关函数声明
 * @Copyright    : (c) 2024-2025 a_23456@foxmail.com All Right Reserved
 *****************************************************************************************************************************************************************/

#ifndef STUDENT_H
#define STUDENT_H

#include "tools.h"

#define STUDENT_ARRAY_SIZE 5

extern jmp_buf quit_env, back_env;

// 设计一个学生基本信息结构
struct student {
  char name[20];  // 学生姓名，最长19个字符
  signed int age; // 学生年龄
  char phone[12]; // 学生电话号码，最长11个字符
};

// 创建一个学生数组
static struct student studentArray[STUDENT_ARRAY_SIZE];
static unsigned int studentCount = 0;

/****************************************************************************************************************************************************************
 * @name         : findName
 * @brief        : 根据姓名查找学生
 * @param        : char *name - 学生姓名
 * @return       : 返回找到的学生指针，未找到返回NULL
 * @date         : 2024-07-27 10:47:59
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
struct student *findName(const char *name);

/****************************************************************************************************************************************************************
 * @name         : findPhone
 * @brief        : 根据电话号码查找学生
 * @param        : char *phone - 学生电话号码
 * @return       : 返回找到的学生指针，未找到返回NULL
 * @date         : 2024-07-27 14:02:07
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
struct student *findPhone(const char *phone);

/****************************************************************************************************************************************************************
 * @name         : validateStudentName
 * @brief        : 校验学生姓名长度是否符合要求
 * @param        : const char *name - 学生姓名
 * @return       : 长度符合要求返回true，否则返回false
 * @date         : 2024-07-27 10:49:02
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
bool validateStudentName(const char *name);

/****************************************************************************************************************************************************************
 * @brief: 校验手机号
 * @param {char} *phone - 学生手机号
 * @return: bool - 合法返回true，不合法返回false
 * @date: 2024-07-28 14:03:41
 * @version: 1.0
 * @note:
 *****************************************************************************************************************************************************************/
bool validatePhone(const char *phone);

/****************************************************************************************************************************************************************
 * @name: printStudentInfo
 * @brief: 打印学生信息
 * @param {char} *name - 学生姓名
 * @param {signed int} age - 学生年龄
 * @param {char} *phone - 学生手机号
 * @return: void
 * @date: 2024-07-28
 * @version: 1.0
 * @note: 打印学生信息，内容居中对齐
 *****************************************************************************************************************************************************************/
void printStudentInfo(const char *name, signed int age, const char *phone);

/****************************************************************************************************************************************************************
 * @name         : addStudent
 * @brief        : 添加学生信息
 * @return       : 成功返回true，失败返回false
 * @date         : 2024-07-27 10:47:42
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
bool addStudent();

/****************************************************************************************************************************************************************
 * @name         : showStudent
 * @brief        : 显示所有学生信息
 * @return       : 无
 * @date         : 2024-07-27 10:47:49
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
void showStudent();

/****************************************************************************************************************************************************************
 * @name         : findStudent
 * @brief        : 查找学生信息
 * @return       : 无
 * @date         : 2024-07-27 10:47:59
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
void findStudent();

/****************************************************************************************************************************************************************
 * @name         : modifyStudent
 * @brief        : 修改学生信息
 * @return       : 成功返回true，失败返回false
 * @date         : 2024-07-27 10:48:20
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
bool modifyStudent();

/****************************************************************************************************************************************************************
 * @name         : deleteStudent
 * @brief        : 删除学生信息
 * @param        : char *name - 学生姓名
 * @return       : 成功返回true，失败返回false
 * @date         : 2024-07-27 10:49:02
 * @version      : 1.0
 *****************************************************************************************************************************************************************/
bool deleteStudent();

#endif
